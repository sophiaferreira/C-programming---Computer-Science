#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <conio.h>
#include <windows.h>

typedef struct reg *no;

struct reg{
	int data;
	struct reg *link;
};
	
int addBeginning(no *list, int data);
int addEnd(no *list, int data);
int countNods(no list);
void createList(no *list);
int searchInList(no list, int search);
void showList(no list);



int main(){
	
	no list = NULL;
	char option;
	int search, info;
	
	do{
		
		printf("\t MENU--------------------------------------\n\n");
		printf("\t 1- Create list\n");
		printf("\t 2- Add element to the beginning\n");
		printf("\t 3- Add element to the end\n");
		printf("\t 4- Search for a specific element\n");
		printf("\t 5- Count nods\n");
		printf("\t 6- Show list\n");
		printf("\t 7- Exit\n\n");
		printf("\t Type the chosen option: ");
		scanf("%c",&option);
		
		switch (option){
			
			case '1':
			int created;
			getchar();
			system("cls");
			createList(&list);
			created = 1;
			printf("\t List created successfully!\n");
			getchar();
			system("cls");
			break;
			
				
			case '2':
			getchar();
			system("cls");
			if(created == 0){
			printf("\n\t Element not inserted. No list created.");
			getchar();
			system("cls");
			break;
			}
			printf("\t Type the element that you wish to insert: ");
			scanf("%d",&info);
			addBeginning(&list, info);
			getchar();
			printf("\n\t Element inserted successfully!");
			getchar();
			system("cls");
			break;
			
			
			case '3':
			getchar();
			system("cls");
			if(created == 0){
			printf("\n\t Element not inserted. No list created.");
			getchar();
			system("cls");
			break;
			}
			printf("\t Type the element that you wish to insert: ");
			scanf("%d",&info);
			addEnd(&list, info);
			printf("\n\t Element inserted successfully!");
			getchar();
			system("cls");
			break;
			
			
			case '4':
			getchar();
			system("cls");
			printf("\t Type the element you wish to search for: ");
			scanf("%d",&search);
			searchInList(list, search);
			getchar();
			system("cls");
			break;
			
			
			case '5':
			getchar();
			system("cls");
			printf("\t There are %d nodes in the list.\n",countNods(list));
			getchar();
			system("cls");
			break;
			
			
			case '6':
			getchar();
			system("cls");
			showList(list);
			getchar();
			system("cls");
			break;
			
			
			case '7':
			getchar();
			system("cls");
			getchar();
			printf("\t Program finished.\n");
			getchar();
			system("cls");
			break;
			
			
			default:
			getchar();
			system("cls");
			printf("\t Invalid option! Type a valid number.\n");
			getchar();
			system("cls");
			break;
		}
		
	}while(option!='7');
	
	
	return 0;
	
}

void createList(no *list){
	*list = NULL;
}


int addBeginning(no *list, int data){
	
	no p = (no)malloc(sizeof(struct reg));
	p->data = data;
	p->link = *list;
	*list = p;
	return 0;
		
}

int addEnd(no *list, int data){
	
	no p = (no)malloc(sizeof(struct reg));
	p->data = data;
	p->link = NULL;
	
	if(*list == NULL)
	*list = p;
	
	else{
		no q = *list;
		while(q->link)
		q = q->link;
	q->link = p;
	}
	
	return 0;
}

int searchInList(no list, int search){
	
	no p = list;
	while(p){
		if(p->data == search)
		return 1;
		p = p->link;
	}
	return 0;
}

void showList(no list){
	
	no p = list;
	printf("\t List's elements: \n");
	while(p){
		printf("\t %d -> ",p->data);
		p = p->link;
	}
	printf("\t NULL\n");
}

int countNods(no list){
	
	int count = 0;
	no p = list;
	
	if(p == NULL)
	printf("\t The list is empty.\n");
	
	while(p){
		count++;
		p = p->link;
	}
	return count;
}

